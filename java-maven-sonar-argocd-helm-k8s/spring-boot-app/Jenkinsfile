pipeline {
    agent any
    tools {
        maven 'maven3'
    }
    environment {
        // APP_NAME = "java-app"
        // DOCKER_USER = "vigneshrepo23"
        // DOCKER_IMAGE = "${DOCKER_USER} + ${APP_NAME}"
        // DOCKER_TAG = "${DOCKER_IMAGE} + ${BUILD_NUMBER}"
        registry = "vigneshrepo23/javaapp>"
        registryCredential = 'docker-token' 
        DOCKER_TOKEN = "docker-token"
        TAG = "${DATE}.${BUILD_NUMBER}"
    }
    stages {
        stage ("git checkout") {
            steps {
                git branch: 'main', url: 'https://github.com/vigneshrepo23/ultimate-cicd-java'
            }
        }
        stage ("build") {
            steps{
                sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package"
            }
        }
        stage ("sonar") {
            steps {
                withSonarQubeEnv('sonarqube') {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package sonar:sonar'
               }
            }
        }
        stage ("gates") {
            steps {
                 timeout(time: 1, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
               }
            }
        }
        stage ("build image") {
           steps {
                script {
                    docker.build("vigneshrepo23/java-app:${TAG}")
                }
            }
        }
        stage('Deploy Image') {
          steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-token') {
                        docker.image("vigneshrepo23/java-app:${TAG}").push()
                        docker.image("vigneshrepo23/java-app:${TAG}").push("latest")
                    }
                }
            }
        }

    }
}